---
bibliography: references.bib
---

# The Problem

```{=html}
<!-- 
Outlining the issue / weak point / problem to be solved by this proposal. This should be a compelling section that sets the reader up for the next section - the proposed solution!

It is important to cover:

 - [ ] What the problem is
 - [ ] Who it affects
 - [ ] Have there been previous attempts to resolve the problem
 - [ ] Why it should be tackled
-->


Packaging R packages for multiple operating systems and architectures is a challenging and time-consuming task. 
Building binaries for different architectures involves handling diverse compiler settings, managing platform-specific dependencies, 
and ensuring compatibility across various system environments. These challenges can lead to inconsistencies and build failures, 
especially when system-level dependencies are not managed explicitly.

There have been several significant efforts to mitigate these issues. For instance, organizations like Posit and community initiatives such as r2u 
have made strides in automating the binary building process. However, these approaches have notable limitations. For example, in the case of the Posit
Public Package manager, system-level dependencies are not explicitly managed requiring users to do it themselves. r2u only packages the current
state of CRAN and cannot be used to install older versions of packages. 

Given that R is used extensively across diverse operating systems and hardware architectures, resolving these issues is critical. 
One promising solution is the integration of Docker images into the build process. Docker can encapsulate the entire software environment, 
including all necessary system dependencies, ensuring that R packages can be built and run consistently regardless of the underlying system. 
This not only enhances reproducibility but also streamlines the deployment process for end users. However, just using Docker in itself does not
guarantee that projects are reproducible, and Docker containers run in complete isolation from the rest of the system, which can lead to
increased difficulties in using them for interactive, explorative work.

Addressing these challenges is important because it directly affects a broad community of R users—from data scientists to statisticians—who depend on consistent 
and reliable package installations across various environments. By tackling this problem, we can significantly improve the robustness and accessibility of R packages, 
ultimately fostering better reproducibility and user experience.

```
An example in-text citation [@wickham2016].
